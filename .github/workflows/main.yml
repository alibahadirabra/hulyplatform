# This is a basic workflow to help you get started with Actions

name: CI

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

# Controls when the action will run.
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [main, develop]
    tags:
      - v*
  pull_request:
    branches: [main, develop]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache node modules
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          path: ./node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/pnpm-lock.yaml') }}
      - name: Cache PR common
        uses: actions/cache@v3
        with:
          path: ./node_modules
          key: ${{ runner.os }}-build-ref-${{ github.ref }}
          restore-keys: |
            ${{ runner.os }}-build-ref-${{ github.ref }}

      - uses: pnpm/action-setup@v2
        with:
          node-version: 18
          version: 8.6.2

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --strict-peer-dependencies

      - name: Setting model version from git release...
        run: pnpm bump-model-version

      - name: Building...
        run: pnpm build

      - name: Bundle
        run: pnpm bundle

      - name: Cache build results for next jobs
        uses: actions/cache@v3
        env:
          cache-name: cache-build-results
        with:
          path: |          
            common
            dev
            models
            node_modules
            packages
            plugins
            pods
            server
            server-plugins
            templates
            tests
            tools
            .gitignore
            .npmrc
            .prettierrc
            *.json
            *.yaml
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
  svelte-check:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache build results
        uses: actions/cache@v3
        env:
          cache-name: cache-build-results
        with:
          path: |
            common
            dev
            models
            node_modules
            packages
            plugins
            pods
            server
            server-plugins
            templates
            tests
            tools
            .gitignore
            .npmrc
            .prettierrc
            *.json
            *.yaml
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}

      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.2

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --strict-peer-dependencies
      - name: Checking svelte sources...
        run: pnpm svelte-check
  formatting:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Cache build results
        uses: actions/cache@v3
        env:
          cache-name: cache-build-results
        with:
          path: |
            common
            dev
            models
            node_modules
            packages
            plugins
            pods
            server
            server-plugins
            templates
            tests
            tools
            .gitignore
            .npmrc
            .prettierrc
            *.json
            *.yaml
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}

      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.2
  
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --strict-peer-dependencies
      - name: Formatting...
        run: pnpm fast-format
      - name: Check files formatting
        run: |
          echo '================================================================'
          echo 'Checking for diff files'
          echo '================================================================'
          git diff '*.ts' '*.svelte' | cat
          [ -z "$(git diff --name-only '*.ts' '*.svelte' | cat)" ]
          echo '================================================================'
  test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache build results
        uses: actions/cache@v3
        env:
          cache-name: cache-build-results
        with:
          path: |
            common
            dev
            models
            node_modules
            packages
            plugins
            pods
            server
            server-plugins
            templates
            tests
            tools
            .gitignore
            .npmrc
            .prettierrc
            *.json
            *.yaml
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@1.9.0
        with:
          mongodb-version: 5.0

      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.2
  
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      - name: Test
        run: pnpm test
  uitest:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache build results
        uses: actions/cache@v3
        env:
          cache-name: cache-build-results
        with:
          path: |
            common
            dev
            models
            node_modules
            packages
            plugins
            pods
            server
            server-plugins
            templates
            tests
            tools
            .gitignore
            .npmrc
            .prettierrc
            *.json
            *.yaml
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}

      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.2

      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --strict-peer-dependencies
      - name: Setting model version from git release...
        run: pnpm bump-model-version

      - name: Building...
        run: pnpm build

      - name: Bundle
        run: pnpm bundle

      - name: Docker build
        run: pnpm docker:build
      - name: Prepare server
        run: |
          cd ./tests
          ./prepare.sh
      - name: Install Playwright
        run: |
          cd ./tests/sanity
          pnpm run ci
      - name: Run UI tests
        run: |
          cd ./tests/sanity
          pnpm uitest
      # - name: Archive DB
      #   run: |
      #     cd ./tests
      #     ./update-snapshot-ci.sh ./tests/db_dump
      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-results
          path: ./tests/sanity/playwright-report/
      - name: Upload DB snapshot
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: db-snapshot
          path: ./tests/db_dump
  docker-build:
    if: ${{ github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v') }}
    needs: [build, uitest, test, svelte-check]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Cache build results
        uses: actions/cache@v3
        env:
          cache-name: cache-build-results
        with:
          path: |
            common
            dev
            models
            node_modules
            packages
            plugins
            pods
            server
            server-plugins
            templates
            tests
            tools
            .gitignore
            .npmrc
            .prettierrc
            *.json
            *.yaml
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}
          restore-keys: ${{ runner.os }}-build-${{ env.cache-name }}-${{ github.sha }}

      - uses: pnpm/action-setup@v2
        with:
          version: 8.6.2
  
      - name: Setup Node.js environment
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'pnpm'
      - name: Install dependencies
        run: pnpm install --strict-peer-dependencies

      - name: Setting model version from git release...
        run: pnpm bump-model-version
      - name: Build, to include new model version
        run: pnpm build
      - name: Bundle
        run: pnpm bundle
      - name: Docker build
        run: pnpm docker:build
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: hardcoreeng
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Docker push staging
        if: ${{ github.ref == 'refs/heads/main' }}
        run: pnpm docker:staging
      - name: Docker push tag
        if: ${{ startsWith(github.ref, 'refs/tags/v') }}
        run: |
          echo Pushing release of tag ${{ github.ref }}
          node pnpm docker:push
